Compiled from "Tsp.java"
public class Tsp extends java.lang.Object
  SourceFile: "Tsp.java"
  minor version: 0
  major version: 49
  Constant pool:
const #1 = Method	#71.#123;	//  java/lang/Object."<init>":()V
const #2 = String	#124;	//  testdata
const #3 = String	#125;	//  --nop
const #4 = Method	#67.#126;	//  java/lang/String.equals:(Ljava/lang/Object;)Z
const #5 = Method	#127.#128;	//  java/lang/Integer.parseInt:(Ljava/lang/String;)I
const #6 = Field	#70.#129;	//  Tsp.nWorkers:I
const #7 = class	#130;	//  java/lang/Exception
const #8 = Field	#131.#132;	//  java/lang/System.out:Ljava/io/PrintStream;
const #9 = String	#133;	//  usage: java Tsp <input file> <number of threads>\n    or java Tsp --nop
const #10 = Method	#134.#135;	//  java/io/PrintStream.println:(Ljava/lang/String;)V
const #11 = Method	#131.#136;	//  java/lang/System.exit:(I)V
const #12 = Method	#131.#137;	//  java/lang/System.gc:()V
const #13 = Field	#39.#138;	//  TspSolver.TourStackTop:I
const #14 = int	2000000;
const #15 = Field	#39.#139;	//  TspSolver.MinTourLen:I
const #16 = Method	#70.#140;	//  Tsp.read_tsp:(Ljava/lang/String;)I
const #17 = Field	#70.#141;	//  Tsp.TspSize:I
const #18 = class	#142;	//  java/util/Date
const #19 = Method	#18.#123;	//  java/util/Date."<init>":()V
const #20 = Method	#18.#143;	//  java/util/Date.getTime:()J
const #21 = Field	#39.#144;	//  TspSolver.Tours:[LTourElement;
const #22 = class	#145;	//  TourElement
const #23 = Method	#22.#123;	//  TourElement."<init>":()V
const #24 = Field	#39.#146;	//  TspSolver.PrioQ:[LPrioQElement;
const #25 = class	#147;	//  PrioQElement
const #26 = Method	#25.#123;	//  PrioQElement."<init>":()V
const #27 = Field	#22.#148;	//  TourElement.prefix:[I
const #28 = Field	#70.#149;	//  Tsp.StartNode:I
const #29 = Field	#22.#150;	//  TourElement.conn:I
const #30 = Field	#22.#151;	//  TourElement.last:I
const #31 = Field	#22.#152;	//  TourElement.prefix_weight:I
const #32 = Method	#39.#153;	//  TspSolver.calc_bound:(I)I
const #33 = Field	#25.#154;	//  PrioQElement.index:I
const #34 = Field	#22.#155;	//  TourElement.lower_bound:I
const #35 = Field	#25.#156;	//  PrioQElement.priority:I
const #36 = Field	#39.#157;	//  TspSolver.PrioQLast:I
const #37 = Field	#39.#158;	//  TspSolver.TourStack:[I
const #38 = class	#159;	//  java/lang/Thread
const #39 = class	#160;	//  TspSolver
const #40 = Method	#39.#123;	//  TspSolver."<init>":()V
const #41 = Method	#38.#161;	//  java/lang/Thread.start:()V
const #42 = Method	#38.#162;	//  java/lang/Thread.join:()V
const #43 = class	#163;	//  java/lang/InterruptedException
const #44 = class	#164;	//  java/lang/StringBuilder
const #45 = Method	#44.#123;	//  java/lang/StringBuilder."<init>":()V
const #46 = String	#165;	//  tsp-
const #47 = Method	#44.#166;	//  java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
const #48 = Method	#44.#167;	//  java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
const #49 = String	#168;	//  \t
const #50 = Method	#44.#169;	//  java/lang/StringBuilder.toString:()Ljava/lang/String;
const #51 = String	#170;	//  Minimum tour length: 
const #52 = String	#171;	//  Minimum tour:
const #53 = Method	#134.#172;	//  java/io/PrintStream.print:(Ljava/lang/String;)V
const #54 = Field	#39.#173;	//  TspSolver.MinTour:[I
const #55 = Method	#39.#174;	//  TspSolver.MakeTourString:(I[I)V
const #56 = class	#175;	//  java/io/BufferedReader
const #57 = class	#176;	//  java/io/FileReader
const #58 = Method	#57.#177;	//  java/io/FileReader."<init>":(Ljava/lang/String;)V
const #59 = Method	#56.#178;	//  java/io/BufferedReader."<init>":(Ljava/io/Reader;)V
const #60 = Method	#56.#179;	//  java/io/BufferedReader.readLine:()Ljava/lang/String;
const #61 = class	#180;	//  java/util/StringTokenizer
const #62 = String	#181;	//   
const #63 = Method	#61.#182;	//  java/util/StringTokenizer."<init>":(Ljava/lang/String;Ljava/lang/String;)V
const #64 = Method	#61.#183;	//  java/util/StringTokenizer.hasMoreElements:()Z
const #65 = Field	#39.#184;	//  TspSolver.weights:[[I
const #66 = Method	#61.#185;	//  java/util/StringTokenizer.nextElement:()Ljava/lang/Object;
const #67 = class	#186;	//  java/lang/String
const #68 = Method	#7.#187;	//  java/lang/Exception.printStackTrace:()V
const #69 = Field	#70.#188;	//  Tsp.NodesFromEnd:I
const #70 = class	#189;	//  Tsp
const #71 = class	#190;	//  java/lang/Object
const #72 = Asciz	debug;
const #73 = Asciz	Z;
const #74 = Asciz	ConstantValue;
const #75 = int	0;
const #76 = Asciz	MAX_TOUR_SIZE;
const #77 = Asciz	I;
const #78 = int	32;
const #79 = Asciz	MAX_NUM_TOURS;
const #80 = int	5000;
const #81 = Asciz	BIGINT;
const #82 = Asciz	END_TOUR;
const #83 = int	-1;
const #84 = Asciz	ALL_DONE;
const #85 = Asciz	nWorkers;
const #86 = Asciz	TspSize;
const #87 = Asciz	StartNode;
const #88 = Asciz	NodesFromEnd;
const #89 = Asciz	<init>;
const #90 = Asciz	()V;
const #91 = Asciz	Code;
const #92 = Asciz	LineNumberTable;
const #93 = Asciz	LocalVariableTable;
const #94 = Asciz	this;
const #95 = Asciz	LTsp;;
const #96 = Asciz	main;
const #97 = Asciz	([Ljava/lang/String;)V;
const #98 = Asciz	e;
const #99 = Asciz	Ljava/lang/Exception;;
const #100 = Asciz	Ljava/lang/InterruptedException;;
const #101 = Asciz	start;
const #102 = Asciz	J;
const #103 = Asciz	t;
const #104 = Asciz	[Ljava/lang/Thread;;
const #105 = Asciz	end;
const #106 = Asciz	i;
const #107 = Asciz	args;
const #108 = Asciz	[Ljava/lang/String;;
const #109 = Asciz	fname;
const #110 = Asciz	Ljava/lang/String;;
const #111 = Asciz	nop;
const #112 = Asciz	read_tsp;
const #113 = Asciz	(Ljava/lang/String;)I;
const #114 = Asciz	line;
const #115 = Asciz	tok;
const #116 = Asciz	Ljava/util/StringTokenizer;;
const #117 = Asciz	j;
const #118 = Asciz	in;
const #119 = Asciz	Ljava/io/BufferedReader;;
const #120 = Asciz	<clinit>;
const #121 = Asciz	SourceFile;
const #122 = Asciz	Tsp.java;
const #123 = NameAndType	#89:#90;//  "<init>":()V
const #124 = Asciz	testdata;
const #125 = Asciz	--nop;
const #126 = NameAndType	#191:#192;//  equals:(Ljava/lang/Object;)Z
const #127 = class	#193;	//  java/lang/Integer
const #128 = NameAndType	#194:#113;//  parseInt:(Ljava/lang/String;)I
const #129 = NameAndType	#85:#77;//  nWorkers:I
const #130 = Asciz	java/lang/Exception;
const #131 = class	#195;	//  java/lang/System
const #132 = NameAndType	#196:#197;//  out:Ljava/io/PrintStream;
const #133 = Asciz	usage: java Tsp <input file> <number of threads>\n    or java Tsp --nop;
const #134 = class	#198;	//  java/io/PrintStream
const #135 = NameAndType	#199:#200;//  println:(Ljava/lang/String;)V
const #136 = NameAndType	#201:#202;//  exit:(I)V
const #137 = NameAndType	#203:#90;//  gc:()V
const #138 = NameAndType	#204:#77;//  TourStackTop:I
const #139 = NameAndType	#205:#77;//  MinTourLen:I
const #140 = NameAndType	#112:#113;//  read_tsp:(Ljava/lang/String;)I
const #141 = NameAndType	#86:#77;//  TspSize:I
const #142 = Asciz	java/util/Date;
const #143 = NameAndType	#206:#207;//  getTime:()J
const #144 = NameAndType	#208:#209;//  Tours:[LTourElement;
const #145 = Asciz	TourElement;
const #146 = NameAndType	#210:#211;//  PrioQ:[LPrioQElement;
const #147 = Asciz	PrioQElement;
const #148 = NameAndType	#212:#213;//  prefix:[I
const #149 = NameAndType	#87:#77;//  StartNode:I
const #150 = NameAndType	#214:#77;//  conn:I
const #151 = NameAndType	#215:#77;//  last:I
const #152 = NameAndType	#216:#77;//  prefix_weight:I
const #153 = NameAndType	#217:#218;//  calc_bound:(I)I
const #154 = NameAndType	#219:#77;//  index:I
const #155 = NameAndType	#220:#77;//  lower_bound:I
const #156 = NameAndType	#221:#77;//  priority:I
const #157 = NameAndType	#222:#77;//  PrioQLast:I
const #158 = NameAndType	#223:#213;//  TourStack:[I
const #159 = Asciz	java/lang/Thread;
const #160 = Asciz	TspSolver;
const #161 = NameAndType	#101:#90;//  start:()V
const #162 = NameAndType	#224:#90;//  join:()V
const #163 = Asciz	java/lang/InterruptedException;
const #164 = Asciz	java/lang/StringBuilder;
const #165 = Asciz	tsp-;
const #166 = NameAndType	#225:#226;//  append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
const #167 = NameAndType	#225:#227;//  append:(I)Ljava/lang/StringBuilder;
const #168 = Asciz	\t;
const #169 = NameAndType	#228:#229;//  toString:()Ljava/lang/String;
const #170 = Asciz	Minimum tour length: ;
const #171 = Asciz	Minimum tour:;
const #172 = NameAndType	#230:#200;//  print:(Ljava/lang/String;)V
const #173 = NameAndType	#231:#213;//  MinTour:[I
const #174 = NameAndType	#232:#233;//  MakeTourString:(I[I)V
const #175 = Asciz	java/io/BufferedReader;
const #176 = Asciz	java/io/FileReader;
const #177 = NameAndType	#89:#200;//  "<init>":(Ljava/lang/String;)V
const #178 = NameAndType	#89:#234;//  "<init>":(Ljava/io/Reader;)V
const #179 = NameAndType	#235:#229;//  readLine:()Ljava/lang/String;
const #180 = Asciz	java/util/StringTokenizer;
const #181 = Asciz	 ;
const #182 = NameAndType	#89:#236;//  "<init>":(Ljava/lang/String;Ljava/lang/String;)V
const #183 = NameAndType	#237:#238;//  hasMoreElements:()Z
const #184 = NameAndType	#239:#240;//  weights:[[I
const #185 = NameAndType	#241:#242;//  nextElement:()Ljava/lang/Object;
const #186 = Asciz	java/lang/String;
const #187 = NameAndType	#243:#90;//  printStackTrace:()V
const #188 = NameAndType	#88:#77;//  NodesFromEnd:I
const #189 = Asciz	Tsp;
const #190 = Asciz	java/lang/Object;
const #191 = Asciz	equals;
const #192 = Asciz	(Ljava/lang/Object;)Z;
const #193 = Asciz	java/lang/Integer;
const #194 = Asciz	parseInt;
const #195 = Asciz	java/lang/System;
const #196 = Asciz	out;
const #197 = Asciz	Ljava/io/PrintStream;;
const #198 = Asciz	java/io/PrintStream;
const #199 = Asciz	println;
const #200 = Asciz	(Ljava/lang/String;)V;
const #201 = Asciz	exit;
const #202 = Asciz	(I)V;
const #203 = Asciz	gc;
const #204 = Asciz	TourStackTop;
const #205 = Asciz	MinTourLen;
const #206 = Asciz	getTime;
const #207 = Asciz	()J;
const #208 = Asciz	Tours;
const #209 = Asciz	[LTourElement;;
const #210 = Asciz	PrioQ;
const #211 = Asciz	[LPrioQElement;;
const #212 = Asciz	prefix;
const #213 = Asciz	[I;
const #214 = Asciz	conn;
const #215 = Asciz	last;
const #216 = Asciz	prefix_weight;
const #217 = Asciz	calc_bound;
const #218 = Asciz	(I)I;
const #219 = Asciz	index;
const #220 = Asciz	lower_bound;
const #221 = Asciz	priority;
const #222 = Asciz	PrioQLast;
const #223 = Asciz	TourStack;
const #224 = Asciz	join;
const #225 = Asciz	append;
const #226 = Asciz	(Ljava/lang/String;)Ljava/lang/StringBuilder;;
const #227 = Asciz	(I)Ljava/lang/StringBuilder;;
const #228 = Asciz	toString;
const #229 = Asciz	()Ljava/lang/String;;
const #230 = Asciz	print;
const #231 = Asciz	MinTour;
const #232 = Asciz	MakeTourString;
const #233 = Asciz	(I[I)V;
const #234 = Asciz	(Ljava/io/Reader;)V;
const #235 = Asciz	readLine;
const #236 = Asciz	(Ljava/lang/String;Ljava/lang/String;)V;
const #237 = Asciz	hasMoreElements;
const #238 = Asciz	()Z;
const #239 = Asciz	weights;
const #240 = Asciz	[[I;
const #241 = Asciz	nextElement;
const #242 = Asciz	()Ljava/lang/Object;;
const #243 = Asciz	printStackTrace;

{
public static final boolean debug;
  Constant value: int 0
public static final int MAX_TOUR_SIZE;
  Constant value: int 32
public static final int MAX_NUM_TOURS;
  Constant value: int 5000
public static final int BIGINT;
  Constant value: int 2000000
public static final int END_TOUR;
  Constant value: int -1
public static final int ALL_DONE;
  Constant value: int -1
static int nWorkers;

static int TspSize;

static int StartNode;

static int NodesFromEnd;

public Tsp();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokespecial	#1; //Method java/lang/Object."<init>":()V
   4:	return
  LineNumberTable: 
   line 12: 0

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   0      5      0    this       LTsp;


public static void main(java.lang.String[]);
  Code:
   Stack=5, Locals=9, Args_size=1
   0:	ldc	#2; //String testdata
   2:	astore_2
   3:	iconst_0
   4:	istore_3
   5:	aload_0
   6:	iconst_0
   7:	aaload
   8:	astore_2
   9:	aload_2
   10:	ldc	#3; //String --nop
   12:	invokevirtual	#4; //Method java/lang/String.equals:(Ljava/lang/Object;)Z
   15:	ifeq	23
   18:	iconst_1
   19:	istore_3
   20:	goto	32
   23:	aload_0
   24:	iconst_1
   25:	aaload
   26:	invokestatic	#5; //Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
   29:	putstatic	#6; //Field nWorkers:I
   32:	goto	49
   35:	astore	4
   37:	getstatic	#8; //Field java/lang/System.out:Ljava/io/PrintStream;
   40:	ldc	#9; //String usage: java Tsp <input file> <number of threads>\n    or java Tsp --nop
   42:	invokevirtual	#10; //Method java/io/PrintStream.println:(Ljava/lang/String;)V
   45:	iconst_m1
   46:	invokestatic	#11; //Method java/lang/System.exit:(I)V
   49:	invokestatic	#12; //Method java/lang/System.gc:()V
   52:	iload_3
   53:	ifne	406
   56:	iconst_m1
   57:	putstatic	#13; //Field TspSolver.TourStackTop:I
   60:	ldc	#14; //int 2000000
   62:	putstatic	#15; //Field TspSolver.MinTourLen:I
   65:	aload_2
   66:	invokestatic	#16; //Method read_tsp:(Ljava/lang/String;)I
   69:	putstatic	#17; //Field TspSize:I
   72:	new	#18; //class java/util/Date
   75:	dup
   76:	invokespecial	#19; //Method java/util/Date."<init>":()V
   79:	invokevirtual	#20; //Method java/util/Date.getTime:()J
   82:	lstore	4
   84:	iconst_0
   85:	istore_1
   86:	iload_1
   87:	sipush	5000
   90:	if_icmpge	123
   93:	getstatic	#21; //Field TspSolver.Tours:[LTourElement;
   96:	iload_1
   97:	new	#22; //class TourElement
   100:	dup
   101:	invokespecial	#23; //Method TourElement."<init>":()V
   104:	aastore
   105:	getstatic	#24; //Field TspSolver.PrioQ:[LPrioQElement;
   108:	iload_1
   109:	new	#25; //class PrioQElement
   112:	dup
   113:	invokespecial	#26; //Method PrioQElement."<init>":()V
   116:	aastore
   117:	iinc	1, 1
   120:	goto	86
   123:	getstatic	#21; //Field TspSolver.Tours:[LTourElement;
   126:	iconst_0
   127:	aaload
   128:	getfield	#27; //Field TourElement.prefix:[I
   131:	iconst_0
   132:	getstatic	#28; //Field StartNode:I
   135:	iastore
   136:	getstatic	#21; //Field TspSolver.Tours:[LTourElement;
   139:	iconst_0
   140:	aaload
   141:	iconst_1
   142:	putfield	#29; //Field TourElement.conn:I
   145:	getstatic	#21; //Field TspSolver.Tours:[LTourElement;
   148:	iconst_0
   149:	aaload
   150:	iconst_0
   151:	putfield	#30; //Field TourElement.last:I
   154:	getstatic	#21; //Field TspSolver.Tours:[LTourElement;
   157:	iconst_0
   158:	aaload
   159:	iconst_0
   160:	putfield	#31; //Field TourElement.prefix_weight:I
   163:	iconst_0
   164:	invokestatic	#32; //Method TspSolver.calc_bound:(I)I
   167:	pop
   168:	getstatic	#24; //Field TspSolver.PrioQ:[LPrioQElement;
   171:	iconst_1
   172:	aaload
   173:	iconst_0
   174:	putfield	#33; //Field PrioQElement.index:I
   177:	getstatic	#24; //Field TspSolver.PrioQ:[LPrioQElement;
   180:	iconst_1
   181:	aaload
   182:	getstatic	#21; //Field TspSolver.Tours:[LTourElement;
   185:	iconst_0
   186:	aaload
   187:	getfield	#34; //Field TourElement.lower_bound:I
   190:	putfield	#35; //Field PrioQElement.priority:I
   193:	iconst_1
   194:	putstatic	#36; //Field TspSolver.PrioQLast:I
   197:	sipush	4999
   200:	istore_1
   201:	iload_1
   202:	ifle	225
   205:	getstatic	#37; //Field TspSolver.TourStack:[I
   208:	getstatic	#13; //Field TspSolver.TourStackTop:I
   211:	iconst_1
   212:	iadd
   213:	dup
   214:	putstatic	#13; //Field TspSolver.TourStackTop:I
   217:	iload_1
   218:	iastore
   219:	iinc	1, -1
   222:	goto	201
   225:	getstatic	#6; //Field nWorkers:I
   228:	anewarray	#38; //class java/lang/Thread
   231:	astore	6
   233:	iconst_0
   234:	istore_1
   235:	iload_1
   236:	getstatic	#6; //Field nWorkers:I
   239:	if_icmpge	259
   242:	aload	6
   244:	iload_1
   245:	new	#39; //class TspSolver
   248:	dup
   249:	invokespecial	#40; //Method TspSolver."<init>":()V
   252:	aastore
   253:	iinc	1, 1
   256:	goto	235
   259:	iconst_0
   260:	istore_1
   261:	iload_1
   262:	getstatic	#6; //Field nWorkers:I
   265:	if_icmpge	281
   268:	aload	6
   270:	iload_1
   271:	aaload
   272:	invokevirtual	#41; //Method java/lang/Thread.start:()V
   275:	iinc	1, 1
   278:	goto	261
   281:	iconst_0
   282:	istore_1
   283:	iload_1
   284:	getstatic	#6; //Field nWorkers:I
   287:	if_icmpge	303
   290:	aload	6
   292:	iload_1
   293:	aaload
   294:	invokevirtual	#42; //Method java/lang/Thread.join:()V
   297:	iinc	1, 1
   300:	goto	283
   303:	goto	308
   306:	astore	7
   308:	new	#18; //class java/util/Date
   311:	dup
   312:	invokespecial	#19; //Method java/util/Date."<init>":()V
   315:	invokevirtual	#20; //Method java/util/Date.getTime:()J
   318:	lstore	7
   320:	getstatic	#8; //Field java/lang/System.out:Ljava/io/PrintStream;
   323:	new	#44; //class java/lang/StringBuilder
   326:	dup
   327:	invokespecial	#45; //Method java/lang/StringBuilder."<init>":()V
   330:	ldc	#46; //String tsp-
   332:	invokevirtual	#47; //Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
   335:	getstatic	#6; //Field nWorkers:I
   338:	invokevirtual	#48; //Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
   341:	ldc	#49; //String \t
   343:	invokevirtual	#47; //Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
   346:	lload	7
   348:	l2i
   349:	lload	4
   351:	l2i
   352:	isub
   353:	invokevirtual	#48; //Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
   356:	invokevirtual	#50; //Method java/lang/StringBuilder.toString:()Ljava/lang/String;
   359:	invokevirtual	#10; //Method java/io/PrintStream.println:(Ljava/lang/String;)V
   362:	getstatic	#8; //Field java/lang/System.out:Ljava/io/PrintStream;
   365:	new	#44; //class java/lang/StringBuilder
   368:	dup
   369:	invokespecial	#45; //Method java/lang/StringBuilder."<init>":()V
   372:	ldc	#51; //String Minimum tour length: 
   374:	invokevirtual	#47; //Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
   377:	getstatic	#15; //Field TspSolver.MinTourLen:I
   380:	invokevirtual	#48; //Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
   383:	invokevirtual	#50; //Method java/lang/StringBuilder.toString:()Ljava/lang/String;
   386:	invokevirtual	#10; //Method java/io/PrintStream.println:(Ljava/lang/String;)V
   389:	getstatic	#8; //Field java/lang/System.out:Ljava/io/PrintStream;
   392:	ldc	#52; //String Minimum tour:
   394:	invokevirtual	#53; //Method java/io/PrintStream.print:(Ljava/lang/String;)V
   397:	getstatic	#17; //Field TspSize:I
   400:	getstatic	#54; //Field TspSolver.MinTour:[I
   403:	invokestatic	#55; //Method TspSolver.MakeTourString:(I[I)V
   406:	return
  Exception table:
   from   to  target type
     5    32    35   Class java/lang/Exception

   281   303   306   Class java/lang/InterruptedException

  LineNumberTable: 
   line 26: 0
   line 27: 3
   line 30: 5
   line 31: 9
   line 32: 23
   line 37: 32
   line 33: 35
   line 34: 37
   line 36: 45
   line 40: 49
   line 41: 52
   line 43: 56
   line 44: 60
   line 46: 65
   line 48: 72
   line 51: 84
   line 52: 93
   line 53: 105
   line 51: 117
   line 57: 123
   line 58: 136
   line 59: 145
   line 60: 154
   line 61: 163
   line 64: 168
   line 65: 177
   line 66: 193
   line 69: 197
   line 70: 205
   line 69: 219
   line 73: 225
   line 74: 233
   line 75: 242
   line 74: 253
   line 78: 259
   line 79: 268
   line 78: 275
   line 84: 281
   line 85: 290
   line 84: 297
   line 88: 303
   line 90: 308
   line 92: 320
   line 93: 362
   line 94: 389
   line 95: 397
   line 97: 406

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   37      12      4    e       Ljava/lang/Exception;
   308      0      7    e       Ljava/lang/InterruptedException;
   84      322      4    start       J
   233      173      6    t       [Ljava/lang/Thread;
   320      86      7    end       J
   86      320      1    i       I
   0      407      0    args       [Ljava/lang/String;
   3      404      2    fname       Ljava/lang/String;
   5      402      3    nop       Z


static int read_tsp(java.lang.String);
  Code:
   Stack=5, Locals=6, Args_size=1
   0:	new	#56; //class java/io/BufferedReader
   3:	dup
   4:	new	#57; //class java/io/FileReader
   7:	dup
   8:	aload_0
   9:	invokespecial	#58; //Method java/io/FileReader."<init>":(Ljava/lang/String;)V
   12:	invokespecial	#59; //Method java/io/BufferedReader."<init>":(Ljava/io/Reader;)V
   15:	astore	5
   17:	aload	5
   19:	invokevirtual	#60; //Method java/io/BufferedReader.readLine:()Ljava/lang/String;
   22:	invokestatic	#5; //Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
   25:	putstatic	#17; //Field TspSize:I
   28:	iconst_0
   29:	istore_3
   30:	iload_3
   31:	getstatic	#17; //Field TspSize:I
   34:	if_icmpge	94
   37:	aload	5
   39:	invokevirtual	#60; //Method java/io/BufferedReader.readLine:()Ljava/lang/String;
   42:	astore_1
   43:	new	#61; //class java/util/StringTokenizer
   46:	dup
   47:	aload_1
   48:	ldc	#62; //String  
   50:	invokespecial	#63; //Method java/util/StringTokenizer."<init>":(Ljava/lang/String;Ljava/lang/String;)V
   53:	astore_2
   54:	iconst_0
   55:	istore	4
   57:	aload_2
   58:	invokevirtual	#64; //Method java/util/StringTokenizer.hasMoreElements:()Z
   61:	ifeq	88
   64:	getstatic	#65; //Field TspSolver.weights:[[I
   67:	iload_3
   68:	aaload
   69:	iload	4
   71:	iinc	4, 1
   74:	aload_2
   75:	invokevirtual	#66; //Method java/util/StringTokenizer.nextElement:()Ljava/lang/Object;
   78:	checkcast	#67; //class java/lang/String
   81:	invokestatic	#5; //Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
   84:	iastore
   85:	goto	57
   88:	iinc	3, 1
   91:	goto	30
   94:	goto	108
   97:	astore	5
   99:	aload	5
   101:	invokevirtual	#68; //Method java/lang/Exception.printStackTrace:()V
   104:	iconst_m1
   105:	invokestatic	#11; //Method java/lang/System.exit:(I)V
   108:	getstatic	#17; //Field TspSize:I
   111:	ireturn
  Exception table:
   from   to  target type
     0    94    97   Class java/lang/Exception

  LineNumberTable: 
   line 105: 0
   line 106: 17
   line 108: 28
   line 109: 37
   line 110: 43
   line 111: 54
   line 112: 57
   line 113: 64
   line 108: 88
   line 118: 94
   line 115: 97
   line 116: 99
   line 117: 104
   line 119: 108

  LocalVariableTable: 
   Start  Length  Slot  Name   Signature
   43      51      1    line       Ljava/lang/String;
   54      40      2    tok       Ljava/util/StringTokenizer;
   57      37      4    j       I
   17      77      5    in       Ljava/io/BufferedReader;
   99      9      5    e       Ljava/lang/Exception;
   0      112      0    fname       Ljava/lang/String;
   30      82      3    i       I


static {};
  Code:
   Stack=1, Locals=0, Args_size=0
   0:	iconst_2
   1:	putstatic	#6; //Field nWorkers:I
   4:	bipush	32
   6:	putstatic	#17; //Field TspSize:I
   9:	iconst_0
   10:	putstatic	#28; //Field StartNode:I
   13:	bipush	12
   15:	putstatic	#69; //Field NodesFromEnd:I
   18:	return
  LineNumberTable: 
   line 19: 0
   line 20: 4
   line 21: 9
   line 22: 13


}

